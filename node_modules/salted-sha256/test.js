// Import.
const assert = require('assert');
const CColor = require('ccolor');
const saltedSha256 = require('./index');

// Test data.
const testDataList = [
  { data: 'Some data.', salt: undefined, correctResult: 'a3d119683e015b0cbbcd2c24b2e531698bf552bd184c56a86b8e115871600a8d' },
  { data: 'Some data.', salt: '', correctResult: 'a3d119683e015b0cbbcd2c24b2e531698bf552bd184c56a86b8e115871600a8d' },
  { data: 'Some data.', salt: 'SUPER-S@LT!', correctResult: '70dc46430221cdfaddd554e7d1c12d474a2c98e8eaf6ea24d08b1185be1a78d0' },
  { data: undefined, salt: 'SUPER-S@LT!', correctResult: 'a33ca1bff9f0935d0a852bc8afed4ff920efbf6bf9738c228487b4c277175ac3' },
  { data: '', salt: 'SUPER-S@LT!', correctResult: 'a33ca1bff9f0935d0a852bc8afed4ff920efbf6bf9738c228487b4c277175ac3' }
];

// Define colors.
const { green, red } = CColor;

// Start async thread.
(async () => {
  let testNumberIterator = 1;
  for (const testData of testDataList) {
    // Define current test data.
    const { data, salt, correctResult } = testData;

    // Sync test.
    const saltedHash = saltedSha256(data, salt);
    assert.equal(saltedHash, correctResult, red(`Sync test ${testNumberIterator}: Wrong hash.`));
    console.log(green(`Sync test ${testNumberIterator}: Passed!`));

    // Async test.
    const asyncSaltedHash = await saltedSha256(data, salt, true);
    assert.equal(asyncSaltedHash, correctResult, red(`Async test ${testNumberIterator}: Wrong hash.`));
    console.log(green(`Async test ${testNumberIterator}: Passed!`));

    // Increment test number.
    testNumberIterator++;
  }
})();
